"use strict";(self.webpackChunkcodingbbq_github_io=self.webpackChunkcodingbbq_github_io||[]).push([[3256],{5655:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var r=n(4848),o=n(8453);const s={},c="JavaScript Closures",i={id:"JavaScript/closures",title:"JavaScript Closures",description:"A closure is a combination of a function bundled together with reference to its surroundings.",source:"@site/docs/JavaScript/closures.md",sourceDirName:"JavaScript",slug:"/JavaScript/closures",permalink:"/docs/JavaScript/closures",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"JavaScript",permalink:"/docs/category/javascript"},next:{title:"How does the new keyword work with a function that is not a class in JavaScript?",permalink:"/docs/JavaScript/constructor-functions"}},a={},u=[];function l(t){const e={h1:"h1",p:"p",...(0,o.R)(),...t.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.h1,{id:"javascript-closures",children:"JavaScript Closures"}),"\n",(0,r.jsx)(e.p,{children:"A closure is a combination of a function bundled together with reference to its surroundings."}),"\n",(0,r.jsx)(e.p,{children:"In other words, a closure gives you access to an outer function's scope from an inner function."}),"\n",(0,r.jsx)(e.p,{children:"Closures remember the outer function scope ever after creation time."})]})}function p(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,r.jsx)(e,{...t,children:(0,r.jsx)(l,{...t})}):l(t)}},8453:(t,e,n)=>{n.d(e,{R:()=>c,x:()=>i});var r=n(6540);const o={},s=r.createContext(o);function c(t){const e=r.useContext(s);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function i(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:c(t.components),r.createElement(s.Provider,{value:e},t.children)}}}]);